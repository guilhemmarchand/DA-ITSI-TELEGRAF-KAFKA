# AUTO-GENERATED. DON'T MODIFY IT!
# This conf file will contain base searches for this ITSI module.
[DA-ITSI-TELEGRAF-KAFKA-DA-ITSI-TELEGRAF-KAFKA_Zookeeper-Performance.traffic]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where  `telegraf_kafka_index` metric_name="zookeeper.packets_sent" OR metric_name="zookeeper.packets_received" span=1s by metric_name, "server"\
| eval {metric_name}=value \
| stats first(zookeeper.*) as "*_counter" by _time, server\
| streamstats current=f last(*_counter) as "*_prev" by server\
| eval packets_sent=(packets_sent_counter-packets_sent_prev), packets_received=(packets_received_counter-packets_received_prev)\
| fields _time, server, packets_sent, packets_received\
| where packets_sent>=0 AND packets_received>=0
description = Traffic metrics for Zookeeper
entity_alias_filtering_fields = server
entity_id_fields = server
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "packets_received", \
        "aggregate_statop": "sum", \
        "entity_statop": "sum", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "packets_received", \
        "title": "packets_received", \
        "unit": "#"\
    }, \
    {\
        "_key": "packets_sent", \
        "aggregate_statop": "sum", \
        "entity_statop": "sum", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "packets_sent", \
        "title": "packets_sent", \
        "unit": "#"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-KAFKA
title = DA-ITSI-TELEGRAF-KAFKA:DA-ITSI-TELEGRAF-KAFKA:Zookeeper-Performance.traffic

[DA-ITSI-TELEGRAF-KAFKA-Kafka-brokers-cluster.Partitions]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_kafka_index` metric_name="kafka_replica_manager.UnderReplicatedPartitions.Value" OR metric_name="kafka_controller.OfflinePartitionsCount.Value" by metric_name, jolokia_agent_url span=1s\
| eval {metric_name}=value\
| stats first(kafka_controller.OfflinePartitionsCount.Value) as OfflinePartitionsCount first(kafka_replica_manager.UnderReplicatedPartitions.Value) as UnderReplicatedPartitions by _time, jolokia_agent_url
description = Monitoring of Kafka brokers cluster offline and under-replicated partitions
entity_alias_filtering_fields = jolokia_agent_url
entity_id_fields = jolokia_agent_url
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "OfflinePartitions", \
        "aggregate_statop": "sum", \
        "entity_statop": "latest", \
        "fill_gaps": "last_available_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "OfflinePartitionsCount", \
        "title": "OfflinePartitions", \
        "unit": "#"\
    }, \
    {\
        "_key": "UnderReplicatedPartitions", \
        "aggregate_statop": "sum", \
        "entity_statop": "latest", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "UnderReplicatedPartitions", \
        "title": "UnderReplicatedPartitions", \
        "unit": "#"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-KAFKA
title = DA-ITSI-TELEGRAF-KAFKA:Kafka-brokers-cluster.Partitions

[DA-ITSI-TELEGRAF-KAFKA-Kafka-broker-cluster.Monitoring]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_kafka_index` metric_name="kafka_topics.MessagesInPerSec.OneMinuteRate" OR metric_name="kafka_topics.BytesInPerSec.OneMinuteRate" OR metric_name="kafka_topics.BytesOutPerSec.OneMinuteRate" by metric_name, jolokia_agent_url span=1s\
| eval {metric_name}=value\
| stats first(kafka_topics.MessagesInPerSec.OneMinuteRate) as MessagesInPerSec, first(kafka_topics.BytesInPerSec.OneMinuteRate) as KBytesInPerSec, first(kafka_topics.BytesOutPerSec.OneMinuteRate) as KBytesOutPerSec by _time, jolokia_agent_url\
| eval KBytesInPerSec=(KBytesInPerSec/1024), KBytesOutPerSec=(KBytesOutPerSec/1024)
description = Monitoring of Kafka brokers cluster
entity_alias_filtering_fields = jolokia_agent_url
entity_id_fields = jolokia_agent_url
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "All_topics_bytes_in_transformed_in_KBytes_", \
        "aggregate_statop": "sum", \
        "entity_statop": "avg", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "KBytesInPerSec", \
        "title": "All topics bytes in (transformed in KBytes)", \
        "unit": "KB"\
    }, \
    {\
        "_key": "All_topics_bytes_out_transformed_in_KBytes_", \
        "aggregate_statop": "sum", \
        "entity_statop": "avg", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "KBytesOutPerSec", \
        "title": "All topics bytes out (transformed in KBytes)", \
        "unit": "KB"\
    }, \
    {\
        "_key": "Messages_per_second", \
        "aggregate_statop": "sum", \
        "entity_statop": "avg", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "MessagesInPerSec", \
        "title": "Messages per second", \
        "unit": "#"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-KAFKA
title = DA-ITSI-TELEGRAF-KAFKA:Kafka-broker-cluster.Monitoring

[DA-ITSI-TELEGRAF-KAFKA-DA-ITSI-TELEGRAF-KAFKA_Zookeeper-Performance]
alert_lag = 30
alert_period = 1
base_search = | mstats latest(_value) as value where `telegraf_kafka_index` metric_name="zookeeper.avg_latency" OR metric_name="zookeeper.outstanding_requests" OR metric_name="zookeeper.pending_syncs" OR metric_name="zookeeper.max_file_descriptor_count" OR metric_name="zookeeper.open_file_descriptor_count" span=1s by metric_name, server\
| eval {metric_name}=value\
| fields _time, server, zookeeper.avg_latency, zookeeper.max_file_descriptor_count, zookeeper.open_file_descriptor_count, zookeeper.outstanding_requests, zookeeper.pending_syncs\
| stats latest(zookeeper.*) as "*" by _time, server\
| eval percent_file_descriptor_used=round((open_file_descriptor_count/max_file_descriptor_count)*100, 3)\
| fields _time, server, avg_latency, outstanding_requests, pending_syncs, percent_file_descriptor_used
description = Main KPIs for Zookeeper monitoring
entity_alias_filtering_fields = server
entity_id_fields = server
is_entity_breakdown = True
is_service_entity_filter = True
metrics = [\
    {\
        "_key": "avg_latency", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "avg_latency", \
        "title": "avg_latency", \
        "unit": "ms"\
    }, \
    {\
        "_key": "outstanding_requests", \
        "aggregate_statop": "sum", \
        "entity_statop": "sum", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "outstanding_requests", \
        "title": "outstanding_requests", \
        "unit": "#"\
    }, \
    {\
        "_key": "pending_syncs", \
        "aggregate_statop": "sum", \
        "entity_statop": "sum", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "pending_syncs", \
        "title": "pending_syncs", \
        "unit": "#"\
    }, \
    {\
        "_key": "percent_file_descriptor_used", \
        "aggregate_statop": "avg", \
        "entity_statop": "avg", \
        "fill_gaps": "null_value", \
        "gap_custom_alert_value": 0, \
        "gap_severity": "unknown", \
        "gap_severity_color": "#CCCCCC", \
        "gap_severity_color_light": "#EEEEEE", \
        "gap_severity_value": "-1", \
        "threshold_field": "percent_file_descriptor_used", \
        "title": "percent_file_descriptor_used", \
        "unit": "%"\
    }\
]
search_alert_earliest = 1
source_itsi_da = DA-ITSI-TELEGRAF-KAFKA
title = DA-ITSI-TELEGRAF-KAFKA:DA-ITSI-TELEGRAF-KAFKA:Zookeeper-Performance
