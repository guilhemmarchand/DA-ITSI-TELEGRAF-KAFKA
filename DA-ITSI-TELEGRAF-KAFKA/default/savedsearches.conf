# savedsearches.conf

#  _____       _   _ _   _                 _ _
# | ____|_ __ | |_(_) |_(_) ___  ___    __| (_)___  ___ _____   _____ _ __ _   _
# |  _| | '_ \| __| | __| |/ _ \/ __|  / _` | / __|/ __/ _ \ \ / / _ \ '__| | | |
# | |___| | | | |_| | |_| |  __/\__ \ | (_| | \__ \ (_| (_) \ V /  __/ |  | |_| |
# |_____|_| |_|\__|_|\__|_|\___||___/  \__,_|_|___/\___\___/ \_/ \___|_|   \__, |
#                                                                          |___/

#  _____           _
# |__  /___   ___ | | _____  ___ _ __   ___ _ __
#   / // _ \ / _ \| |/ / _ \/ _ \ '_ \ / _ \ '__|
#  / /| (_) | (_) |   <  __/  __/ |_) |  __/ |
# /____\___/ \___/|_|\_\___|\___| .__/ \___|_|
#                               |_|

# The following search will discover all zookeeper servers reporting to the telegraf metric indexes
[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_zookeeper]
search = | mcatalog values(server) as server where `telegraf_kafka_index` metric_name="zookeeper.avg_latency" OR metric_name="zookeeper.open_file_descriptor_count"\
| mvexpand server\
| eval itsi_role="zookeeper"\
| fields itsi_role, server
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#  _  __      __ _           _               _
# | |/ /__ _ / _| | ____ _  | |__  _ __ ___ | | _____ _ __ ___
# | ' // _` | |_| |/ / _` | | '_ \| '__/ _ \| |/ / _ \ '__/ __|
# | . \ (_| |  _|   < (_| | | |_) | | | (_) |   <  __/ |  \__ \
# |_|\_\__,_|_| |_|\_\__,_| |_.__/|_|  \___/|_|\_\___|_|  |___/
#

[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_kafka_brokers]
search = | mcatalog values(jolokia_agent_url) as jolokia_agent_url where `telegraf_kafka_index` metric_name="kafka_controller.ActiveControllerCount.Value"\
| mvexpand jolokia_agent_url\
| eval itsi_role="kafka_broker"\
| rex field=jolokia_agent_url "//(?<kafka_broker>[^:]*)\:"\
| fields itsi_role, jolokia_agent_url, kafka_broker
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#  _  __      __ _            ____                            _
# | |/ /__ _ / _| | ____ _   / ___|___  _ __  _ __   ___  ___| |_
# | ' // _` | |_| |/ / _` | | |   / _ \| '_ \| '_ \ / _ \/ __| __|
# | . \ (_| |  _|   < (_| | | |__| (_) | | | | | | |  __/ (__| |_
# |_|\_\__,_|_| |_|\_\__,_|  \____\___/|_| |_|_| |_|\___|\___|\__|
#

[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_kafka_connect]
search = | mcatalog values(jolokia_agent_url) as jolokia_agent_url where `telegraf_kafka_index` metric_name="kafka_connect.worker.connector-count"\
| mvexpand jolokia_agent_url\
| eval itsi_role="kafka_connect"\
| rex field=jolokia_agent_url "//(?<kafka_connect>[^:]*)\:"\
| fields itsi_role, jolokia_agent_url, kafka_connect
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#  _  __      __ _            ____                            _
# | |/ /__ _ / _| | ____ _   / ___|___  _ __  _ __   ___  ___| |_
# | ' // _` | |_| |/ / _` | | |   / _ \| '_ \| '_ \ / _ \/ __| __|
# | . \ (_| |  _|   < (_| | | |__| (_) | | | | | | |  __/ (__| |_
# |_|\_\__,_|_| |_|\_\__,_|  \____\___/|_| |_|_| |_|\___|\___|\__|
#
#  _            _
# | |_ __ _ ___| | _____
# | __/ _` / __| |/ / __|
# | || (_| \__ \   <\__ \
#  \__\__,_|___/_|\_\___/
#
#   ______                              ______  _       _   __
#  / / ___|  ___  _   _ _ __ ___ ___   / / ___|(_)_ __ | | _\ \
# | |\___ \ / _ \| | | | '__/ __/ _ \ / /\___ \| | '_ \| |/ /| |
# | | ___) | (_) | |_| | | | (_|  __// /  ___) | | | | |   < | |
# | ||____/ \___/ \__,_|_|  \___\___/_/  |____/|_|_| |_|_|\_\| |
#  \_\                                                      /_/
#

[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_kafka_connect_tasks]
search = | mcatalog values(jolokia_agent_url) as jolokia_agent_url values(metric_name) as metric_name where `telegraf_kafka_index` metric_name="kafka_connect.source-task.source-record-poll-total" OR metric_name="kafka_connect.sink-task.sink-record-read-total" connector=* by connector\
| eval itsi_role=case(match(metric_name, "sink-task"), "kafka_sink_task", match(metric_name, "source-task"), "kafka_source_task")\
| fields - metric_name | rename jolokia_agent_url as kafka_connect_nodes, connector as kafka_task\
| nomv kafka_task_nodes | rex field=kafka_task_nodes mode=sed "s/ /|/g"\
| fields itsi_role, kafka_task, kafka_task_nodes
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#  _  __      __ _           _              _
# | |/ /__ _ / _| | ____ _  | |_ ___  _ __ (_) ___ ___
# | ' // _` | |_| |/ / _` | | __/ _ \| '_ \| |/ __/ __|
# | . \ (_| |  _|   < (_| | | || (_) | |_) | | (__\__ \
# |_|\_\__,_|_| |_|\_\__,_|  \__\___/| .__/|_|\___|___/
#                                    |_|

[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_kafka_topics]
search = | mcatalog values(jolokia_agent_url) as jolokia_agent_url where `telegraf_kafka_index` metric_name="kafka_topic.MessagesInPerSec.Count" OR metric_name="kafka_topic.BytesInPerSec.Count" topic!="__*" by topic\
| eval itsi_role="kafka_topic"\
| rename topic as kafka_topic, jolokia_agent_url as kafka_topic_brokers\
| nomv kafka_topic_brokers | rex field=kafka_topic_brokers mode=sed "s/ /|/g"\
| fields itsi_role, kafka_topic, kafka_topic_brokers
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#  _     _       _            _ _
# | |   (_)_ __ | | _____  __| (_)_ __
# | |   | | '_ \| |/ / _ \/ _` | | '_ \
# | |___| | | | |   <  __/ (_| | | | | |
# |_____|_|_| |_|_|\_\___|\__,_|_|_| |_|
#
#  _  __      __ _                                     _ _
# | |/ /__ _ / _| | ____ _       _ __ ___   ___  _ __ (_) |_ ___  _ __
# | ' // _` | |_| |/ / _` |_____| '_ ` _ \ / _ \| '_ \| | __/ _ \| '__|
# | . \ (_| |  _|   < (_| |_____| | | | | | (_) | | | | | || (_) | |
# |_|\_\__,_|_| |_|\_\__,_|     |_| |_| |_|\___/|_| |_|_|\__\___/|_|
#

[DA-ITSI-TELEGRAF-KAFKA-Inventory_Search_linkedin_kafka_monitors]
search = | mcatalog values(jolokia_agent_url) as jolokia_agent_url where `telegraf_kafka_index` metric_name="kafka_kafka-monitor.produce-availability-avg" OR metric_name="kafka_kafka-monitor.consume-availability-avg"\
| mvexpand jolokia_agent_url\
| eval itsi_role="kafka_linkedin_monitor"
| fields itsi_role, jolokia_agent_url, kafka_linkedin_monitor
request.ui_dispatch_app = itsi
request.ui_dispatch_view = search

#
#   ____                    _       _   _
#  / ___|___  _ __ _ __ ___| | __ _| |_(_) ___  _ __
# | |   / _ \| '__| '__/ _ \ |/ _` | __| |/ _ \| '_ \
# | |__| (_) | |  | | |  __/ | (_| | |_| | (_) | | | |
#  \____\___/|_|  |_|  \___|_|\__,_|\__|_|\___/|_| |_|
#
#  ____                      _
# / ___|  ___  __ _ _ __ ___| |__   ___  ___
# \___ \ / _ \/ _` | '__/ __| '_ \ / _ \/ __|
#  ___) |  __/ (_| | | | (__| | | |  __/\__ \
# |____/ \___|\__,_|_|  \___|_| |_|\___||___/
#

[Kafka cluster - active controller state in the brokers cluster]
action.email.format = pdf
action.email.includeEntities = 0
action.itsi_event_generator = 1
action.itsi_event_generator.param.description = An exception was detected in the analysis of the active controller state of the Kafka brokers cluster
action.itsi_event_generator.param.drilldown_search_earliest_offset = -3600
action.itsi_event_generator.param.drilldown_search_latest_offset = 300
action.itsi_event_generator.param.drilldown_search_search = Show active controller state in the Kafka brokers cluster
action.itsi_event_generator.param.drilldown_search_title = | mstats latest(_value) as value where `telegraf_kafka_index` metric_name="kafka_controller.ActiveControllerCount.Value" by "jolokia_agent_url" span=1s | timechart span=1m max(value) as ActiveControllerCount by jolokia_agent_url
action.itsi_event_generator.param.editor = advance_correlation_builder_editor
action.itsi_event_generator.param.meta_data = {}
action.itsi_event_generator.param.owner = unassigned
action.itsi_event_generator.param.search_type = basic
action.itsi_event_generator.param.severity = 5
action.itsi_event_generator.param.status = 1
action.itsi_event_generator.param.title = Kafka brokers cluster - Active Controller state exception
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = */5 * * * *
description = The active controller count metric indicates whether the broker is currently the controller for the cluster. The metric will either be 0 or 1, with 1 showing that the broker\
is currently the controller. At all times, only one broker should be the controller, and\
one broker must always be the controller in the cluster.
dispatch.earliest_time = -1m
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | mstats latest(_value) as value where `telegraf_kafka_index` metric_name="kafka_controller.ActiveControllerCount.Value" by "jolokia_agent_url"\
| chart first(value) as value by jolokia_agent_url\
| stats count(eval(value=1)) as count | where count>1 OR count=0
